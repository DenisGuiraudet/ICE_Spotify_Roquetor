/**
 * generated by Xtext 2.12.0
 */
package m1ice.formatting2;

import com.google.inject.Inject;
import java.util.Arrays;
import m1ice.services.SpotifyRequetorGrammarAccess;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.formatting2.AbstractFormatter2;
import org.eclipse.xtext.formatting2.IFormattableDocument;
import org.eclipse.xtext.resource.XtextResource;
import org.eclipse.xtext.xbase.lib.Extension;
import spotify_Requetor.Command;
import spotify_Requetor.CommandManager;

@SuppressWarnings("all")
public class SpotifyRequetorFormatter extends AbstractFormatter2 {
  @Inject
  @Extension
  private SpotifyRequetorGrammarAccess _spotifyRequetorGrammarAccess;
  
  protected void _format(final CommandManager commandManager, @Extension final IFormattableDocument document) {
    document.<Command>format(commandManager.getCommandmanager());
  }
  
  public void format(final Object commandManager, final IFormattableDocument document) {
    if (commandManager instanceof XtextResource) {
      _format((XtextResource)commandManager, document);
      return;
    } else if (commandManager instanceof CommandManager) {
      _format((CommandManager)commandManager, document);
      return;
    } else if (commandManager instanceof EObject) {
      _format((EObject)commandManager, document);
      return;
    } else if (commandManager == null) {
      _format((Void)null, document);
      return;
    } else if (commandManager != null) {
      _format(commandManager, document);
      return;
    } else {
      throw new IllegalArgumentException("Unhandled parameter types: " +
        Arrays.<Object>asList(commandManager, document).toString());
    }
  }
}
