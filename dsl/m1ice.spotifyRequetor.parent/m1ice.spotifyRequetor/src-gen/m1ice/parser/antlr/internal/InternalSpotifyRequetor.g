/*
 * generated by Xtext 2.12.0
 */
grammar InternalSpotifyRequetor;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package m1ice.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package m1ice.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import m1ice.services.SpotifyRequetorGrammarAccess;

}

@parser::members {

 	private SpotifyRequetorGrammarAccess grammarAccess;

    public InternalSpotifyRequetorParser(TokenStream input, SpotifyRequetorGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "CommandManager";
   	}

   	@Override
   	protected SpotifyRequetorGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleCommandManager
entryRuleCommandManager returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandManagerRule()); }
	iv_ruleCommandManager=ruleCommandManager
	{ $current=$iv_ruleCommandManager.current; }
	EOF;

// Rule CommandManager
ruleCommandManager returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCommandManagerAccess().getCommandManagerAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCommandManagerAccess().getCommandmanagerCommandParserRuleCall_1_0());
				}
				lv_commandmanager_1_0=ruleCommand
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCommandManagerRule());
					}
					set(
						$current,
						"commandmanager",
						lv_commandmanager_1_0,
						"m1ice.SpotifyRequetor.Command");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleCommand
entryRuleCommand returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCommandRule()); }
	iv_ruleCommand=ruleCommand
	{ $current=$iv_ruleCommand.current; }
	EOF;

// Rule Command
ruleCommand returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getCommandAccess().getSearchParserRuleCall_0());
		}
		this_Search_0=ruleSearch
		{
			$current = $this_Search_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getCommandAccess().getShowParserRuleCall_1());
		}
		this_Show_1=ruleShow
		{
			$current = $this_Show_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSearch
entryRuleSearch returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSearchRule()); }
	iv_ruleSearch=ruleSearch
	{ $current=$iv_ruleSearch.current; }
	EOF;

// Rule Search
ruleSearch returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='search'
		{
			newLeafNode(otherlv_0, grammarAccess.getSearchAccess().getSearchKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSearchRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getSearchAccess().getTypeTypeCrossReference_1_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleShow
entryRuleShow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getShowRule()); }
	iv_ruleShow=ruleShow
	{ $current=$iv_ruleShow.current; }
	EOF;

// Rule Show
ruleShow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='show'
		{
			newLeafNode(otherlv_0, grammarAccess.getShowAccess().getShowKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getShowRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getShowAccess().getTypeTypeCrossReference_1_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleArtist
entryRuleArtist returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArtistRule()); }
	iv_ruleArtist=ruleArtist
	{ $current=$iv_ruleArtist.current; }
	EOF;

// Rule Artist
ruleArtist returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getArtistAccess().getArtistAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getArtistAccess().getTargetEStringParserRuleCall_1_0());
				}
				lv_target_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getArtistRule());
					}
					set(
						$current,
						"target",
						lv_target_1_0,
						"m1ice.SpotifyRequetor.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAlbum
entryRuleAlbum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlbumRule()); }
	iv_ruleAlbum=ruleAlbum
	{ $current=$iv_ruleAlbum.current; }
	EOF;

// Rule Album
ruleAlbum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAlbumAccess().getAlbumAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAlbumAccess().getTargetEStringParserRuleCall_1_0());
				}
				lv_target_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlbumRule());
					}
					set(
						$current,
						"target",
						lv_target_1_0,
						"m1ice.SpotifyRequetor.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTrack
entryRuleTrack returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrackRule()); }
	iv_ruleTrack=ruleTrack
	{ $current=$iv_ruleTrack.current; }
	EOF;

// Rule Track
ruleTrack returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTrackAccess().getTrackAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTrackAccess().getTargetEStringParserRuleCall_1_0());
				}
				lv_target_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTrackRule());
					}
					set(
						$current,
						"target",
						lv_target_1_0,
						"m1ice.SpotifyRequetor.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulePlaylist
entryRulePlaylist returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlaylistRule()); }
	iv_rulePlaylist=rulePlaylist
	{ $current=$iv_rulePlaylist.current; }
	EOF;

// Rule Playlist
rulePlaylist returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPlaylistAccess().getPlaylistAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPlaylistAccess().getTargetEStringParserRuleCall_1_0());
				}
				lv_target_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPlaylistRule());
					}
					set(
						$current,
						"target",
						lv_target_1_0,
						"m1ice.SpotifyRequetor.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
